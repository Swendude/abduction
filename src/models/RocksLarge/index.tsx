/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { Center, Outlines, useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Mesh_rock_largeA: THREE.Mesh;
    Mesh_rock_largeA_1: THREE.Mesh;
  };
  materials: {
    rockTrack: THREE.MeshStandardMaterial;
    rock: THREE.MeshStandardMaterial;
  };
};

export default function Model(
  props: JSX.IntrinsicElements["group"] & { scale?: number }
) {
  const { nodes, materials } = useGLTF("/rock_largeA.glb") as GLTFResult;
  return (
    <group {...{ ...props, scale: 1 }} dispose={null}>
      <Center top left>
        <group position={[0, 0, 0]} scale={props.scale}>
          <mesh castShadow geometry={nodes.Mesh_rock_largeA.geometry}>
            <meshToonMaterial color={"#6c6046"} />
            <Outlines thickness={0.04 / (props.scale || 1)} />
          </mesh>
          <mesh castShadow geometry={nodes.Mesh_rock_largeA_1.geometry}>
            <meshToonMaterial color={"#d6aeab"} />
            <Outlines thickness={0.04 / (props.scale || 1)} />
          </mesh>
        </group>
      </Center>
    </group>
  );
}

useGLTF.preload("/rock_largeA.glb");
